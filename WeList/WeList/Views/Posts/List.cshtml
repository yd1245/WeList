@model WeList.Models.SearchViewModel
@using  WeList.Helper


@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_bulmatemplate.cshtml";
    var temp_loc = Model.Locale == null ? string.Empty : Model.Locale.Slug;
    var temp_loc_n = Model.Locale == null ? "all " + Model.Area.Name.ToLower() : Model.Locale.Name.ToLower();
    var temp_subc = Model.Subcategory == null ? string.Empty : Model.Subcategory.Slug;
    var temp_subc_n = Model.Subcategory == null ? "all" : Model.Subcategory.Name.ToLower();
    var temp_cate = Model.Category.Slug;
    var temp_area = Model.Area.Slug;
}


<section class="section">
    <div class="tile is-ancestor">

        @*filter*@
        <div class="tile is-3 is-vertical is-parent">
            <div class="tile is-child box">
                <div class="title">Filter</div>
                <div class="columns is-multiline">
                <div class="column is-11">
                @*filter AREA*@
                <div class="dropdown is-hoverable">
                    <div class="dropdown-trigger">
                        <button class="button is-danger" aria-haspopup="true" aria-controls="dropdown-menu3">
                            <span>@Html.DisplayFor(model => Model.Area.Name)</span>
                            <span class="icon is-small">
                                <i class="fas fa-angle-down" aria-hidden="true"></i>
                            </span>
                        </button>
                    </div>
                    <div class="dropdown-menu" id="dropdown-menu3" role="menu">
                        <div class="dropdown-content">
                            @foreach (var ar in Model.Areas)
                            {
                            
                             <a  class="dropdown-item is-capitalized" href="@Url.Isolate(u => u.Action("List", "Posts", new { area_sl = ar.Slug,  loc_sl=string.Empty,cate_sl = temp_cate, subc_sl = temp_subc }))">@ar.Name</a>
                           
                             }
                        </div>
                    </div>
                </div>
                </div>

                @*filter Locale*@
                <div class="column is-11">
                <div class="dropdown is-12 is-hoverable">
                    <div class="dropdown-trigger">
                        <button class="button is-primary" aria-haspopup="true" aria-controls="dropdown-menu3">
                            <span>@Html.DisplayFor(model => temp_loc_n)</span>
                            <span class="icon is-small">
                                <i class="fas fa-angle-down" aria-hidden="true"></i>
                            </span>
                        </button>
                    </div>
                    <div class="dropdown-menu" id="dropdown-menu3" role="menu">
                        <div class="dropdown-content">
                            @if(temp_loc!="") { 
                                <a class="dropdown-item" href="@Url.Isolate(u => u.Action("List", "Posts", new { area_sl = temp_area,  loc_sl=string.Empty,cate_sl = temp_cate, subc_sl = temp_subc }))">all @Model.Area.Name.ToLower()</a>
                            }
                            @foreach (var loc in Model.Locales)
                            {                                                               
                                @Html.ActionLink(loc.Name, "List", "Posts", new { area_sl = temp_area, loc_sl = loc.Slug, cate_sl = temp_cate, subc_sl = temp_subc }, new {@class= "dropdown-item is-lowercase" })
                            }
                        </div>
                    </div>
                </div>
                </div>

                @*filter Category*@
                <div class="column is-11">
                <div class="dropdown is-hoverable">
                    <div class="dropdown-trigger">
                        <button class="button is-success" aria-haspopup="true" aria-controls="dropdown-menu3">
                            <span>@Html.DisplayFor(model => Model.Category.Name)</span>
                            <span class="icon is-small">
                                <i class="fas fa-angle-down" aria-hidden="true"></i>
                            </span>
                        </button>
                    </div>
                    <div class="dropdown-menu" id="dropdown-menu3" role="menu">
                        <div class="dropdown-content">
                            @foreach (var cate in Model.Categories)
                            {
                                
                             <a class="dropdown-item is-capitalized" href="@Url.Isolate(u =>u.Action("List", "Posts", new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = cate.Slug,subc_sl=string.Empty }))">@cate.Name</a>
                               
                            }
                        </div>
                    </div>
                </div>
                </div>

                @*filter Subcategory*@
                <div class="column is-11">
                <div class="dropdown is-hoverable">
                    <div class="dropdown-trigger">
                        <button class="button is-info" aria-haspopup="true" aria-controls="dropdown-menu3">
                            <span>@Html.DisplayFor(model => temp_subc_n)</span>
                            <span class="icon is-small">
                                <i class="fas fa-angle-down" aria-hidden="true"></i>
                            </span>
                        </button>
                    </div>
                    <div class="dropdown-menu" id="dropdown-menu3" role="menu">
                        <div class="dropdown-content">
                           @if (temp_subc != "")
                           {
                            <a class="dropdown-item" href="@Url.Isolate(u => u.Action("List", "Posts", new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = string.Empty }))">all @Model.Category.Name.ToLower()</a>
                           }
                            @foreach (var subc in Model.Subcategories)
                            {
                                 @Html.ActionLink(subc.Name, "List", "Posts", new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = subc.Slug }, new {@class="dropdown-item is-lowercase"})

                            }
                        </div>
                    </div>
                </div>
                </div>


            </div> @*END of columns*@
            </div>@*END of filter child*@
        </div> @*END of filter parent*@





         @*right part*@
        <div class="tile is-vertical">

            @*search*@
            @using (Html.BeginForm("List", "Posts", FormMethod.Post))
            {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => Model.Area.Slug)
            @Html.HiddenFor(model => Model.Category.Slug)
            if (Model.Locale != null)
            {
                    @Html.HiddenFor(model => Model.Locale.Slug)
            }
            if (Model.Subcategory != null)
            {
                    @Html.HiddenFor(model => Model.Subcategory.Slug)
            }
            <div class="tile is-12 is-vertical is-parent">
                <div class="tile is-child">
                    <div class="field has-addons">
                        <div class="control is-expanded">
                            <input class="input" type="text" name="Keyword"  value="@Model.Keyword" placeholder="Find a post">
                        </div>
                        <div class="control">
                            <input type="submit" value="Search" class="button is-info" /> 
                        </div>
                    </div>
                </div>         
             </div> @*End of search*@

            }



            @*list of posts*@
            <div class="tile is-12 is-vertical is-parent">
                <div class="tile is-child">  
                   @foreach (var post in Model.Posts)
                    {
                    <div class="columns">
                        <div class="column is-three-fifths">
                            <a href="@Url.Action("Details","Posts",new { id = post.PostId, filter=Model })">@post.Title</a>
                        </div>
                        <div class="column is-one-fifth">@post.Email</div>
                        @{  var time = post.Timestamp;
                            string totime;
                            if (time.Year != DateTime.Now.Year) { totime = time.ToString("MM / dd / yyyy"); }
                            if (time.Date == DateTime.Now.Date) { totime = time.ToString("HH:mm"); }
                            else { totime = time.ToString("MM / dd"); }
                        }
                        <div class="column is-one-fifth">@totime</div>  @*has-text-grey-light*@
                    </div>
                    }
                   @if (!ViewData.ModelState.IsValid)
                    {
                    <p>
                    @Html.ValidationMessageFor(model => model.Filter, "", new { @class = " is-size-6 help is-danger" })
                    </p>
                    }
                </div>
            </div> @*End of posts*@

            @*pagination*@
            <div class="tile is-12 is-parent">
                <div class="tile is-child">

                    <nav class="pagination is-rounded" role="navigation" aria-label="pagination">
                        @{ string disable_f; string disable_e;}
                        @if (Model.CurrentPage == 1|| Model.PageCount == 0) { disable_f = "disabled"; } else { disable_f = string.Empty; }
                        @if (Model.CurrentPage == Model.PageCount|| Model.PageCount==0) { disable_e = "disabled"; } else { disable_e = string.Empty; }
                        <a class="pagination-previous" @disable_f href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=Model.CurrentPage-1 })">
                            Previous
                        </a>
                        <a class="pagination-next" @disable_e href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=Model.CurrentPage+1 })">
                            Next page
                        </a>
                        <ul class="pagination-list">
                            @if (Model.PageCount <= 7)
                            {
                                for(int i=1;i<=Model.PageCount;i++)
                                {
                                     <li>
                                         @if (i == Model.CurrentPage)
                                         {
                                           <a class="pagination-link is-current" disabled aria-label="Goto page">@Model.CurrentPage</a>
                                         }
                                         else
                                         {
                                         <a class="pagination-link" href="@Url.Action("List", "Posts", new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc, Page = i })" aria-label="Goto page">
                                            @i
                                         </a>
                                         }
                                     </li>
                                }
                            }
                            else if(Model.PageCount>7 && Model.CurrentPage > 3 && Model.CurrentPage<Model.PageCount-2)
                            {
                                 <li><a class="pagination-link" href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=1 })" aria-label="Goto page 1">1</a></li>
                                 <li><span class="pagination-ellipsis">&hellip;</span></li>
                                 <li><a class="pagination-link" href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=Model.CurrentPage-1 })" aria-label="Goto page">@(Model.CurrentPage-1)</a></li>
                                 <li><a class="pagination-link is-current" disabled aria-label="Goto page">@Model.CurrentPage</a></li>
                                 <li><a class="pagination-link" href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=Model.CurrentPage+1 })" aria-label="Goto page">@(Model.CurrentPage+1)</a></li>
                                 <li><span class="pagination-ellipsis">&hellip;</span></li>
                                 <li><a class="pagination-link" href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=Model.PageCount })" aria-label="Goto page">@Model.PageCount</a></li>

                            }
                            else if(Model.PageCount > 7 && Model.CurrentPage <= 3)
                            {
                                for(int i = 1; i < Model.CurrentPage; i++)
                                {
                                    <li><a class="pagination-link" href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=i })" aria-label="Goto page">@i</a></li>
                                }
                                <li><a class="pagination-link is-current" disabled aria-label="Goto page">@Model.CurrentPage</a></li>
                                <li><a class="pagination-link" href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=Model.CurrentPage+1 })" aria-label="Goto page">@(Model.CurrentPage+1)</a></li>
                                <li><span class="pagination-ellipsis">&hellip;</span></li>
                                <li><a class="pagination-link" href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=Model.PageCount })" aria-label="Goto page">@Model.PageCount</a></li>
                            }
                            else if(Model.PageCount > 7 && Model.CurrentPage >= Model.PageCount - 2)
                            {
                                 <li><a class="pagination-link" href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=1 })" aria-label="Goto page 1">1</a></li>
                                 <li><span class="pagination-ellipsis">&hellip;</span></li>
                                 <li><a class="pagination-link" href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=Model.CurrentPage-1 })" aria-label="Goto page">@(Model.CurrentPage-1)</a></li>
                                 <li><a class="pagination-link is-current" disabled aria-label="Goto page">@Model.CurrentPage</a></li>
                                for(int i = Model.CurrentPage + 1; i <= Model.PageCount; i++)
                                {
                                    <li><a class="pagination-link" href="@Url.Action("List","Posts",new { area_sl = temp_area, loc_sl = temp_loc, cate_sl = temp_cate, subc_sl = temp_subc,Page=i })" aria-label="Goto page">@i</a></li>
                                }
                            }
                        </ul>
                    </nav>

                </div>
            </div>



        </div> @*End of right part*@




   </div>
</section>




    